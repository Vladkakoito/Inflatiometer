Описание сервисов

В проекте используемые сервисы запускают другие сервисы. И запускаются ТОЛЬКО другими сервисами (кроме контроллера).
Для родительского сервиса необхдимо указать в конфигурационном файле ([имя сервиса].ini) дочерние сервисы, которые он может вызвать.
Буду стараться делать взаимодействие между сервисами максимально универсальным.
Что бы их можно было их менять если потребуется.

1. Контроллер - стартует первым, дёргает за нитки, всеми управляет.
  По команде / расписанию запускает парсеры и обработчики данных, "дружит" парсеры и обработчики через PIPE.
  На данный момент 1 парсер и 1 обработчик. Но думаю стоит сделать очередь между ними в рамках контроллера,
  что бы была возможность подключить несколько парсеров и несколько обработчиков.
  Запускает сервер для приёма пользовательских команд.
  Запускает сервер БД если указан в настройках.

2. Парсеры - пока магнитовский на питоне. Собирает данные и отдаёт их в на данный момент в PIPE(для него это stdout),
  Из данных пока только название и цена. Наверное, стоит ещё в перспективе код магазина добавить.

3. Обработчик данных - берёт данные от парсера, приводит их к стандартному (моему) виду. 
  Дёргает менеджера БД для записи в БД. Тут сложность провести соответствие названий в моей БД и прилетевшие.

4. Менеджер БД - взаимодействует с БД. В Рантайме подстраивается под настройки из конфига (по типу БД).
  Пока что это только Postgres, но задел на будущее. Хочу Кафку попробовать потом. Кажется, она подойдёт.

5. Сервер - пока даже не начал. Будет слушать запросы пользователей на получение данных,
  команды - например на запуск парсинга. Может ещё чего

Для того что бы можно было в общем конфиге настраивать любой сервис, настройки (Settings.h) 
включают в себя структуры для всех сервисов. И парсер в Common умеет их всех парсить.
Возможно, позже придёт более хорошая идея.


Структура БД.
1. Есть json-файл с описаний категорий и продуктов. Опираясь на него наполняется БД.
  Каждая нода - категория или продукт. Категория может содержать вложенные ноды. Продукт - нет.
  Каждая нода содержит имя, индекс(может уберу позже, 
  если будет понятно что есть гарантия порядка элементов в массиве) и массив тегов. 
2. Решил всё-таки пока использовать Postgres, добавил возможность указать БД в настройках.
  Если захочется заменить Postgres - нужно будет дописать менеджер для него.
  Эта runtime-настройка, что бы можно было без пересборки менять БД.
  В перспективе сделать сервисы переноса данных между БД.

  to be continued
